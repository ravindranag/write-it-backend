// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @unique @default(cuid())
  email    String   @unique
  password String
  joinedAt DateTime @default(now())

  profile Profile?
}

model Profile {
  id               String      @unique @default(cuid())
  name             String
  username         String      @unique
  bio              String?
  avatar           String?
  twitter_username String?
  userId           String      @unique
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  blogs            Blog[]
  likes            BlogLikes[]
}

model Blog {
  id          String        @unique @default(cuid())
  title       String
  slug        String        @unique
  description String?
  data        Json
  authorId    String
  author      Profile       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  likedBy     BlogLikes[]
  categoryId  String?
  category    Category?      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  keywords    BlogKeyword[]
}

model BlogLikes {
  blogSlug    String
  profileId   String
  blog        Blog    @relation(fields: [blogSlug], references: [slug], onDelete: Cascade)
  userProfile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([blogSlug, profileId])
}

model Category {
  id          String @id @default(cuid())
  name        String
  description String
  blogs       Blog[]
}

model Keyword {
  id          String        @id @default(cuid())
  name        String
  description String?
  blogs       BlogKeyword[]
}

model BlogKeyword {
  blogId    String
  blog      Blog    @relation(fields: [blogId], references: [id], onDelete: Cascade)
  keywordId String
  keyword   Keyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)

  @@id([blogId, keywordId])
}
